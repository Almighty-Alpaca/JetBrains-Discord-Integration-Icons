plugins {
    id 'java'
    id 'com.github.ben-manes.versions' version '0.20.0'
    id 'com.palantir.git-version' version '0.11.0'
}

sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.5'

    compile group: 'commons-io', name: 'commons-io', version: '2.6'

    compile group: 'com.squareup.okhttp3', name: 'okhttp', version: '3.11.0'

    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.7'

    compile group: 'org.apache.commons', name: 'commons-collections4', version: '4.2'

    compile group: 'org.eclipse.jgit', name: 'org.eclipse.jgit', version: '5.0.2.201807311906-r'

    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'

    compile group: 'org.jetbrains', name: 'annotations', version: '16.0.2'

    compile group: 'com.github.depsypher', name: 'pngtastic', version: '1.5'
}

def secrets = file("secrets.gradle")
if (secrets.exists()) {
    apply from: secrets
}

task uploadIcons(type: JavaExec) {
    group = 'build'

    classpath = sourceSets.main.runtimeClasspath
    main = 'com.almightyalpaca.jetbrains.plugins.discord.uploader.Uploader'
    environment 'DISCORD_TOKEN': getCustomProperty('DISCORD_TOKEN')

    onlyIf { !getCustomProperty('DISCORD_TOKEN').empty }
}

task generateMissingIcons(type: JavaExec) {
    group = 'build'

    classpath = sourceSets.main.runtimeClasspath
    main = 'com.almightyalpaca.jetbrains.plugins.discord.icongenerator.IconGenerator'

    jvmArgs += '-Xmx1G'
}

task regenerateIcons(type: JavaExec) {
    group = 'build'

    classpath = sourceSets.main.runtimeClasspath
    main = 'com.almightyalpaca.jetbrains.plugins.discord.icongenerator.IconGenerator'

    jvmArgs += '-Xmx1G'
    args += 'ForceAll'
}

task clearIcons(type: JavaExec) {
    group = 'build'

    classpath = sourceSets.main.runtimeClasspath
    main = 'com.almightyalpaca.jetbrains.plugins.discord.icongenerator.IconClearer'

    jvmArgs += '-Xmx1G'
}

task reportUnusedIcons(type: JavaExec) {
    group = 'build'

    classpath = sourceSets.main.runtimeClasspath
    main = 'com.almightyalpaca.jetbrains.plugins.discord.icons.UnusedIconReporter'

    jvmArgs += '-Xmx1G'
}

task reportMissingIcons(type: JavaExec) {
    group = 'build'

    classpath = sourceSets.main.runtimeClasspath
    main = 'com.almightyalpaca.jetbrains.plugins.discord.icons.MissingIconReporter'

    jvmArgs += '-Xmx1G'
}

task createIconZip(type: Zip) {
    group 'build'

    dependsOn generateMissingIcons

    archiveName = 'icons.zip'

    from fileTree('icons') {
        include '*.json'
        include '*/*_low.png'

        into 'icons/'
    }
}

String getCustomProperty(String name) {
    if (project.properties[name])
        return project.properties[name]

    return ''
}
